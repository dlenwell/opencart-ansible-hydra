---

- name: making MySQL listen on all interfaces
  lineinfile: dest=/etc/mysql/my.cnf regexp="bind-address" state=absent
  notify: restart mysql

- name: installing cifs-utils and nfs-common packages
  apt: name={{ item }} state=latest update_cache=yes
  with_items:
    - cifs-utils
    - nfs-common

- name: creating smbcredentials file to be able to mount the cifs share
  lineinfile: dest=~/.smbcredentials mode=0600 create=yes line="username=ansible\npassword=ansible"

- name: mounting the import-export NAS folder
  mount: fstype=cifs name=/mnt src={{ nas_mount_point }} state=mounted opts="credentials=/root/.smbcredentials"

- name: installing the python-mysqldb package
  apt: name=python-mysqldb state=latest

- name: creating the databases
  mysql_db: name={{ item }} state=present
  with_items:
    - magento1
    - magento2

- name: creating the magento MySQL user
  mysql_user: name=magento host=% password=12345 priv=*.*:ALL state=present

- name: what is the date today?
  shell: date +%F
  register: today

- name: checking to see if we have a DB dump from today
  stat: path=/mnt/database/magento1_db_dump_{{ today.stdout }}.gz
  register: dump_exist
  failed_when: not dump_exist.stat.exists

- name: counting how many tables (and views!) we have in the magento1 schema dump SQL file
  shell: zgrep -i "create table" /mnt/database/magento1_schema_dump_{{ today.stdout }}.gz | wc -l
  register: dump_tables_counter

- name: counting how many tables (and views!) we have in the magento1 DB
  shell: mysql --skip-column-names --batch -e "USE magento1; SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = 'magento1';"
  register: db_tables_counter
  sudo: yes

- name: checking to see if we already have a magento1 DB dump SQL file without definers
  stat: path=/mnt/database/magento1_db_dump_{{ today.stdout }}_nodefs.gz
  when: db_tables_counter.stdout|int != dump_tables_counter.stdout|int
  register: statnodefs

- name: removing definers from the magento1 DB dump
  shell: zcat /mnt/database/magento1_db_dump_{{ today.stdout }}.gz|perl -pe 's/\sDEFINER=`[^`]+`@`[^`]+`//'|gzip > /mnt/database/magento1_db_dump_{{ today.stdout }}_nodefs.gz
  when: statnodefs is defined and not statnodefs.stat.exists

- name: importing the magento1 and magento2 databases
  mysql_db: name={{ item.db_name }} state=import target=/mnt/database/{{ item.file }}{{ today.stdout }}{{ item.hasdefs }}
  with_items:
    - { db_name: 'magento1', file: 'magento1_db_dump_', hasdefs: '_nodefs.gz'}
    - { db_name: 'magento2', file: 'magento2_db_dump_', hasdefs: '.gz'}
  when: statnodefs.stat.exists is defined

- name: pushing performance config
  template: src=performance.cnf.j2 dest=/etc/mysql/conf.d/performance.cnf
  register: performance

- name: cleaning up old innodb log files
  file: path={{ item }} state=absent
  with_items:
    - /var/lib/mysql/ib_logfile0
    - /var/lib/mysql/ib_logfile1
  when: performance.changed
  notify: restart mysql
